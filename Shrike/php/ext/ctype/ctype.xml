 <reference id="ref.ctype">
  <title>Character type functions</title>
  <titleabbrev>ctype</titleabbrev>

  <partintro>
   <para>
    These functions check whether a character or string
    falls into a certain character class according to the i
    current locale.
   </para>
   <para>
    When called with an integer argument these functions 
    behave exactly like their C counterparts.
   </para>
   <para>
    When called with a string argument they will check
    every character in the string and will only return
    true if every character in the string matches the
    requested criteria.
   </para>
   <para>
    Passing anything else but a string or integer will 
    return false immediately.
   </para>
  </partintro>


  <refentry id="function.isalnum">
   <refnamediv>
    <refname>isalnum</refname>
    <refpurpose>Check for alphanumeric character(s)</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>isalnum</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     See also <function>setlocale</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.isalpha">
   <refnamediv>
    <refname>isalpha</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>isalpha</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.iscntrl">
   <refnamediv>
    <refname>iscntrl</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>iscntrl</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.isdigit">
   <refnamediv>
    <refname>isdigit</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>isdigit</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.islower">
   <refnamediv>
    <refname>islower</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>islower</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.isgraph">
   <refnamediv>
    <refname>isgraph</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>isgraph</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.isprint">
   <refnamediv>
    <refname>isprint</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>isprint</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ispunct">
   <refnamediv>
    <refname>ispunct</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>ispunct</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.isspace">
   <refnamediv>
    <refname>isspace</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>isspace</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.isupper">
   <refnamediv>
    <refname>isupper</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>isupper</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.isxdigit">
   <refnamediv>
    <refname>isxdigit</refname>
    <refpurpose></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>isxdigit</function></funcdef>
     <paramdef>string <parameter>c</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

