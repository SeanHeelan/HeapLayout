<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.8.2" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>phar</name>
 <channel>pecl.php.net</channel>
 <summary>allows running of complete applications out of .phar files (like Java .jar files)</summary>
 <description>This is the extension version of PEAR&apos;s PHP_Archive package. Support for
zlib, bz2 and crc32 is achieved without any dependency other than the external
zlib or bz2 extension.

.phar files can be read using the phar stream, or with the Phar class.  If the SPL extension
is available, a Phar object can be used as an array to iterate over a phar&apos;s contents
or to read files directly from the phar.

Phar supports tar and zip file formats as well as the native phar file format, and can also be
used to create data-only tar and zip archives with the PharData class, even if
write access is disabled by the phar.readonly ini variable.

Executable phar archives can be created using the streams API or with the Phar class, if
the phar.readonly ini variable is set to false.

Full support for MD5 and SHA1 signatures is possible. Signatures can be required 
if the ini variable phar.require_hash is set to true. When PECL extension hash is
available then SHA-256 and SHA-512 signatures are supported as well.

Phar is APC-compatible, the latest APC will cache files within a phar archive, resulting in
a 6x speedup measured running phpMyAdmin as a phar archive.</description>
 <lead>
  <name>Greg Beaver</name>
  <user>cellog</user>
  <email>cellog@php.net</email>
  <active>yes</active>
 </lead>
 <lead>
  <name>Marcus Boerger</name>
  <user>helly</user>
  <email>helly@php.net</email>
  <active>yes</active>
 </lead>
 <developer>
  <name>Steph Fox</name>
  <user>sfox</user>
  <email>sfox@php.net</email>
  <active>yes</active>
 </developer>
 <date>2009-07-26</date>
 <time>15:41:33</time>
 <version>
  <release>2.0.0</release>
  <api>1.1.1</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="http://www.php.net/license">PHP License</license>
 <notes>
BC BREAKING RELEASE
 BC breaks:
 * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),
   Phar::compressFiles()/decompressFiles() and PharFileInfo-&gt;compress()/decompress().
 * phar.extract_list and Phar::getExtractList() are removed

Major feature functionality release
 * phar.cache_list allows web-based phar applications to run at equal or faster than
   their on-disk equivalent [Greg]
 * new default stub allows running of phar-based phars without phar extension [Greg/Steph]
 * add support for tar-based and zip-based phar archives [Greg]
 * add support for OpenSSL-based true signatures [Greg]
 * add support for signatures to tar-based phar archives [Greg]
 * add Phar::isFileFormat() [Greg]
 * add Phar::convertToExecutable(), Phar::convertToData() [Greg]
 * add Phar::compress() [Greg]
 * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to
   decompressFiles() [Greg]
 * conversion to compressed or to other file formats automatically copies the archive
   to a new extension (i.e. &quot;.phar&quot; to &quot;.phar.tar&quot; or &quot;.tar&quot; to &quot;.tar.gz&quot;) [Steph]
 * add Phar::webPhar() for running a web-based application unmodified
   directly from a phar archive [Greg]
 * file functions (fopen-based and stat-based) can be instructed to only look for
   relative paths within a phar via Phar::interceptFileFuncs()
 * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]
   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]
 * paths with . and .. work (phar://blah.phar/a/../b.php =&gt; phar://blah.phar/b.php) [Greg]
 * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]
 * add option to compress the entire phar file for phar/tar file format [Greg]
 * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]
 * implement Phar::copy(string $from, string $to) [Greg]
 * implement Phar::running(), returns path or URL to currently executed phar
 * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]
 * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]
 * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]
 * add Phar::delete() [Greg]
 * implement Phar::unlinkArchive() [Greg]

Security addition
 * aliases are validated so that they contain no directory separators as intended
 * on conversion to other formats, user-supplied aliases are validated

Changes since 2.0.0RC2:
 fixed PHP Bug #49021: phar tar signature algorithm reports as Unknown (0) in
 getSignature() call
 fixed PHP Bug #49020: phar misinterprets ustar long filename standard
 fixed PHP Bug #49018: phar tar stores long filenames with prefix/name reversed
 fixed PHP Bug #48791: open office files always reported as corrupted
 fixed PHP Bug #48783: make install will fail saying phar file exists
 fixed PHP Bug #48740: PHAR install fails when INSTALL_ROOT is not the final install location
 fixed PHP Bug #48681: openssl signature verification for tar archives broken
 fixed PHP Bug #48377: error message unclear on converting phar with existing file
 fixed isset() on sub-directories (isset(&quot;blah&quot;) if file &quot;blah/foo.php&quot; exists)

 make phar work in PHP 6
Changes since 2.0.0RC1:
 security vulnerability in handling of long tar filenames fixed
 fixed PECL Bug #14646: phar error message unclear with php stream wrappers
 fixed PECL Bug #16338: php_stream_copy_to_stream{,_ex}()
 fixed PHP Bug #48257: PharData throws an exception with non-phar tar
 fixed PHP Bug #47085: rename() returns true even if the file in PHAR does not exist
 fixed PHP Bug #46032: PharData::__construct() - wrong memory read
 fixed PHP Bug #46060: Phar::addEmptyDir() breaks
 fixed PHP Bug #45907: undefined reference to &apos;PHP_SHA512Init&apos;
 fixed PHP Bug #45726: PHP_Archive / Archive.php missing
Changes since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,
 conversion API refactored
Changes since 2.0.0b1: addition of phar.cache_list, many performance improvements and bugfixes
 implement OpenSSL asynchronous true package signing
 add support for package signing to tar-based archives
 require PHP 5.2.1+
 </notes>
 <contents>
  <dir baseinstalldir="/" name="/">
   <dir name="phar">
    <file name="clicommand.inc" role="src" />
    <file name="directorygraphiterator.inc" role="src" />
    <file name="directorytreeiterator.inc" role="src" />
    <file name="invertedregexiterator.inc" role="src" />
    <file name="phar.inc" role="src" />
    <file name="phar.php" role="src" />
    <file name="pharcommand.inc" role="src" />
   </dir> <!-- /phar -->
   <dir name="tests">
    <dir name="cache_list">
     <dir name="files">
      <file name="blog.phar" role="test" />
      <file name="blog.phar.inc" role="test" />
      <file name="config.xml" role="test" />
      <file name="extracted.inc" role="test" />
      <file name="frontcontroller.phar" role="test" />
      <file name="frontcontroller.phar.inc" role="test" />
      <file name="frontcontroller2.phar" role="test" />
      <file name="frontcontroller2.phar.inc" role="test" />
      <file name="frontcontroller3.phar" role="test" />
      <file name="frontcontroller3.phar.inc" role="test" />
      <file name="frontcontroller4.phar" role="test" />
      <file name="frontcontroller4.phar.inc" role="test" />
      <file name="frontcontroller5.phar" role="test" />
      <file name="frontcontroller5.phar.inc" role="test" />
      <file name="frontcontroller6.phar" role="test" />
      <file name="frontcontroller6.phar.inc" role="test" />
      <file name="frontcontroller7.phar" role="test" />
      <file name="frontcontroller7.phar.inc" role="test" />
      <file name="frontcontroller8.phar" role="test" />
      <file name="frontcontroller8.phar.inc" role="test" />
      <file name="frontcontroller9.phar" role="test" />
      <file name="frontcontroller9.phar.inc" role="test" />
      <file name="frontcontroller10.phar" role="test" />
      <file name="frontcontroller10.phar.inc" role="test" />
      <file name="frontcontroller11.phar" role="test" />
      <file name="frontcontroller11.phar.inc" role="test" />
      <file name="frontcontroller12.phar" role="test" />
      <file name="frontcontroller12.phar.inc" role="test" />
      <file name="frontcontroller13.phar" role="test" />
      <file name="frontcontroller13.phar.inc" role="test" />
      <file name="frontcontroller14.phar" role="test" />
      <file name="frontcontroller14.phar.inc" role="test" />
      <file name="frontcontroller16.phar" role="test" />
      <file name="frontcontroller16.phar.inc" role="test" />
      <file name="frontcontroller17.phar" role="test" />
      <file name="frontcontroller17.phar.inc" role="test" />
      <file name="frontcontroller18.phar" role="test" />
      <file name="frontcontroller18.phar.inc" role="test" />
      <file name="frontcontroller19.phar" role="test" />
      <file name="frontcontroller19.phar.inc" role="test" />
      <file name="md5.phar" role="test" />
      <file name="nophar.phar" role="test" />
      <file name="nophar.phar.inc" role="test" />
      <file name="openssl.phar" role="test" />
      <file name="openssl.phar.pubkey" role="test" />
      <file name="phar_oo_test.inc" role="test" />
      <file name="phar_test.inc" role="test" />
      <file name="private.pem" role="test" />
      <file name="sha1.phar" role="test" />
      <file name="sha256.phar" role="test" />
      <file name="sha512.phar" role="test" />
      <file name="write.phar" role="test" />
      <file name="write.phar.inc" role="test" />
      <file name="write2.phar" role="test" />
      <file name="write2.phar.inc" role="test" />
      <file name="write3.phar" role="test" />
      <file name="write3.phar.inc" role="test" />
      <file name="write4.phar" role="test" />
      <file name="write4.phar.inc" role="test" />
      <file name="write5.phar" role="test" />
      <file name="write5.phar.inc" role="test" />
      <file name="write6.phar" role="test" />
      <file name="write6.phar.inc" role="test" />
      <file name="write7.phar" role="test" />
      <file name="write7.phar.inc" role="test" />
      <file name="write8.phar" role="test" />
      <file name="write8.phar.inc" role="test" />
      <file name="write9.phar" role="test" />
      <file name="write9.phar.inc" role="test" />
      <file name="write10.phar" role="test" />
      <file name="write10.phar.inc" role="test" />
      <file name="write11.phar" role="test" />
      <file name="write11.phar.inc" role="test" />
      <file name="write12.phar" role="test" />
      <file name="write12.phar.inc" role="test" />
      <file name="write13.phar" role="test" />
      <file name="write13.phar.inc" role="test" />
      <file name="write14.phar" role="test" />
      <file name="write14.phar.inc" role="test" />
      <file name="write15.phar" role="test" />
      <file name="write15.phar.inc" role="test" />
      <file name="write16.phar" role="test" />
      <file name="write16.phar.inc" role="test" />
      <file name="write17.phar" role="test" />
      <file name="write17.phar.inc" role="test" />
      <file name="write18.phar" role="test" />
      <file name="write18.phar.inc" role="test" />
      <file name="write19.phar" role="test" />
      <file name="write19.phar.inc" role="test" />
      <file name="write20.phar" role="test" />
      <file name="write20.phar.inc" role="test" />
      <file name="write21.phar" role="test" />
      <file name="write21.phar.inc" role="test" />
      <file name="write22.phar" role="test" />
      <file name="write22.phar.inc" role="test" />
      <file name="write23.phar" role="test" />
      <file name="write23.phar.inc" role="test" />
      <file name="write24.phar" role="test" />
      <file name="write24.phar.inc" role="test" />
      <file name="write25.phar" role="test" />
      <file name="write25.phar.inc" role="test" />
      <file name="zfapp.tgz" role="test" />
     </dir> <!-- /tests/cache_list/files -->
     <file name="copyonwrite1.phar.phpt" role="test" />
     <file name="copyonwrite2.phar.phpt" role="test" />
     <file name="copyonwrite3.phar.phpt" role="test" />
     <file name="copyonwrite4.phar.phpt" role="test" />
     <file name="copyonwrite4a.phpt" role="test" />
     <file name="copyonwrite5.phar.phpt" role="test" />
     <file name="copyonwrite6.phar.phpt" role="test" />
     <file name="copyonwrite7.phar.phpt" role="test" />
     <file name="copyonwrite8.phar.phpt" role="test" />
     <file name="copyonwrite9.phar.phpt" role="test" />
     <file name="copyonwrite10.phar.phpt" role="test" />
     <file name="copyonwrite11.phar.phpt" role="test" />
     <file name="copyonwrite12.phar.phpt" role="test" />
     <file name="copyonwrite13.phar.phpt" role="test" />
     <file name="copyonwrite14.phar.phpt" role="test" />
     <file name="copyonwrite15.phar.phpt" role="test" />
     <file name="copyonwrite16.phar.phpt" role="test" />
     <file name="copyonwrite17.phar.phpt" role="test" />
     <file name="copyonwrite18.phar.phpt" role="test" />
     <file name="copyonwrite19.phar.phpt" role="test" />
     <file name="copyonwrite20.phar.phpt" role="test" />
     <file name="copyonwrite21.phar.phpt" role="test" />
     <file name="copyonwrite22.phar.phpt" role="test" />
     <file name="copyonwrite23.phar.phpt" role="test" />
     <file name="copyonwrite24.phar.phpt" role="test" />
     <file name="copyonwrite25.phar.phpt" role="test" />
     <file name="frontcontroller1.phpt" role="test" />
     <file name="frontcontroller2.phpt" role="test" />
     <file name="frontcontroller3.phpt" role="test" />
     <file name="frontcontroller4.phpt" role="test" />
     <file name="frontcontroller5.phpt" role="test" />
     <file name="frontcontroller6.phpt" role="test" />
     <file name="frontcontroller7.phpt" role="test" />
     <file name="frontcontroller8.phpt" role="test" />
     <file name="frontcontroller9.phpt" role="test" />
     <file name="frontcontroller10.phpt" role="test" />
     <file name="frontcontroller11.phpt" role="test" />
     <file name="frontcontroller12.phpt" role="test" />
     <file name="frontcontroller13.phpt" role="test" />
     <file name="frontcontroller14.phpt" role="test" />
     <file name="frontcontroller15.phpt" role="test" />
     <file name="frontcontroller16.phpt" role="test" />
     <file name="frontcontroller17.phpt" role="test" />
     <file name="frontcontroller18.phpt" role="test" />
     <file name="frontcontroller19.phpt" role="test" />
     <file name="frontcontroller20.phpt" role="test" />
     <file name="frontcontroller21.phpt" role="test" />
     <file name="frontcontroller22.phpt" role="test" />
     <file name="frontcontroller23.phpt" role="test" />
     <file name="frontcontroller24.phpt" role="test" />
     <file name="frontcontroller25.phpt" role="test" />
     <file name="frontcontroller26.phpt" role="test" />
     <file name="frontcontroller27.phpt" role="test" />
     <file name="frontcontroller28.phpt" role="test" />
     <file name="frontcontroller29.phpt" role="test" />
     <file name="frontcontroller30.phpt" role="test" />
     <file name="frontcontroller31.phpt" role="test" />
     <file name="frontcontroller32.phpt" role="test" />
     <file name="frontcontroller33.phpt" role="test" />
     <file name="frontcontroller34.phpt" role="test" />
    </dir> <!-- /tests/cache_list -->
    <dir name="files">
     <file name="blog.phar" role="test" />
     <file name="blog.phar.inc" role="test" />
     <file name="config.xml" role="test" />
     <file name="extracted.inc" role="test" />
     <file name="frontcontroller.phar" role="test" />
     <file name="frontcontroller.phar.inc" role="test" />
     <file name="frontcontroller2.phar" role="test" />
     <file name="frontcontroller2.phar.inc" role="test" />
     <file name="frontcontroller3.phar" role="test" />
     <file name="frontcontroller3.phar.inc" role="test" />
     <file name="frontcontroller4.phar" role="test" />
     <file name="frontcontroller4.phar.inc" role="test" />
     <file name="frontcontroller5.phar" role="test" />
     <file name="frontcontroller5.phar.inc" role="test" />
     <file name="frontcontroller6.phar" role="test" />
     <file name="frontcontroller6.phar.inc" role="test" />
     <file name="frontcontroller7.phar" role="test" />
     <file name="frontcontroller7.phar.inc" role="test" />
     <file name="frontcontroller8.phar" role="test" />
     <file name="frontcontroller8.phar.inc" role="test" />
     <file name="frontcontroller9.phar" role="test" />
     <file name="frontcontroller9.phar.inc" role="test" />
     <file name="frontcontroller10.phar" role="test" />
     <file name="frontcontroller10.phar.inc" role="test" />
     <file name="frontcontroller11.phar" role="test" />
     <file name="frontcontroller11.phar.inc" role="test" />
     <file name="frontcontroller12.phar" role="test" />
     <file name="frontcontroller12.phar.inc" role="test" />
     <file name="frontcontroller13.phar" role="test" />
     <file name="frontcontroller13.phar.inc" role="test" />
     <file name="frontcontroller14.phar" role="test" />
     <file name="frontcontroller14.phar.inc" role="test" />
     <file name="frontcontroller16.phar" role="test" />
     <file name="frontcontroller16.phar.inc" role="test" />
     <file name="frontcontroller17.phar" role="test" />
     <file name="frontcontroller17.phar.inc" role="test" />
     <file name="frontcontroller18.phar" role="test" />
     <file name="frontcontroller18.phar.inc" role="test" />
     <file name="frontcontroller19.phar" role="test" />
     <file name="frontcontroller19.phar.inc" role="test" />
     <file name="include_path.phar" role="test" />
     <file name="include_path.phar.inc" role="test" />
     <file name="include_path2.phar" role="test" />
     <file name="md5.phar" role="test" />
     <file name="nophar.phar" role="test" />
     <file name="nophar.phar.inc" role="test" />
     <file name="notbogus.zip" role="test" />
     <file name="openssl.phar" role="test" />
     <file name="openssl.phar.pubkey" role="test" />
     <file name="phar_oo_test.inc" role="test" />
     <file name="phar_test.inc" role="test" />
     <file name="private.pem" role="test" />
     <file name="sha1.phar" role="test" />
     <file name="sha256.phar" role="test" />
     <file name="sha512.phar" role="test" />
     <file name="zfapp.tgz" role="test" />
    </dir> <!-- /tests/files -->
    <dir name="tar">
     <dir name="files">
      <file name="badalias1.phar.tar" role="test" />
      <file name="badalias2.phar.tar" role="test" />
      <file name="badalias3.phar.tar" role="test" />
      <file name="badalias4.phar.tar" role="test" />
      <file name="badalias5.phar.tar" role="test" />
      <file name="biglink.tar" role="test" />
      <file name="corrupt_tarmaker.php.inc" role="test" />
      <file name="frontcontroller.phar.inc" role="test" />
      <file name="frontcontroller.phar.tar" role="test" />
      <file name="frontcontroller2.phar.inc" role="test" />
      <file name="frontcontroller2.phar.tar" role="test" />
      <file name="frontcontroller3.phar.inc" role="test" />
      <file name="frontcontroller3.phar.tar" role="test" />
      <file name="frontcontroller4.phar.inc" role="test" />
      <file name="frontcontroller4.phar.tar" role="test" />
      <file name="frontcontroller5.phar.inc" role="test" />
      <file name="frontcontroller5.phar.tar" role="test" />
      <file name="frontcontroller6.phar.inc" role="test" />
      <file name="frontcontroller6.phar.tar" role="test" />
      <file name="frontcontroller7.phar.inc" role="test" />
      <file name="frontcontroller7.phar.tar" role="test" />
      <file name="frontcontroller8.phar.inc" role="test" />
      <file name="frontcontroller8.phar.tar" role="test" />
      <file name="frontcontroller9.phar.inc" role="test" />
      <file name="frontcontroller9.phar.tar" role="test" />
      <file name="frontcontroller10.phar.inc" role="test" />
      <file name="frontcontroller10.phar.tar" role="test" />
      <file name="frontcontroller11.phar.inc" role="test" />
      <file name="frontcontroller11.phar.tar" role="test" />
      <file name="frontcontroller12.phar.inc" role="test" />
      <file name="frontcontroller12.phar.tar" role="test" />
      <file name="links.phar.tar" role="test" />
      <file name="links.tar" role="test" />
      <file name="make.dangerous.tar.php.inc" role="test" />
      <file name="make_invalid_tar.php.inc" role="test" />
      <file name="Net_URL-1.0.15.tgz" role="test" />
      <file name="P1-1.0.0.tgz" role="test" />
      <file name="P1-1.0.0.tgz.pubkey" role="test" />
      <file name="subdirlink.tar" role="test" />
      <file name="tarmaker.php.inc" role="test" />
      <file name="tinylink.tar" role="test" />
      <file name="trunc.tar" role="test" />
     </dir> <!-- /tests/tar/files -->
     <file name="033.phpt" role="test" />
     <file name="033a.phpt" role="test" />
     <file name="alias_acrobatics.phpt" role="test" />
     <file name="all.phpt" role="test" />
     <file name="allU.phpt" role="test" />
     <file name="badalias.phpt" role="test" />
     <file name="badchecksum.phpt" role="test" />
     <file name="bignames.phpt" role="test" />
     <file name="bignames_overflow.phpt" role="test" />
     <file name="create_new_and_modify.phpt" role="test" />
     <file name="create_new_phar_b.phpt" role="test" />
     <file name="delete.phpt" role="test" />
     <file name="delete_in_phar.phpt" role="test" />
     <file name="delete_in_phar_b.phpt" role="test" />
     <file name="delete_in_phar_confirm.phpt" role="test" />
     <file name="dir.phpt" role="test" />
     <file name="exists_as_phar.phpt" role="test" />
     <file name="frontcontroller1.phar.phpt" role="test" />
     <file name="frontcontroller2.phar.phpt" role="test" />
     <file name="frontcontroller3.phar.phpt" role="test" />
     <file name="frontcontroller4.phar.phpt" role="test" />
     <file name="frontcontroller5.phar.phpt" role="test" />
     <file name="frontcontroller6.phar.phpt" role="test" />
     <file name="frontcontroller7.phar.phpt" role="test" />
     <file name="frontcontroller8.phar.phpt" role="test" />
     <file name="frontcontroller9.phar.phpt" role="test" />
     <file name="frontcontroller10.phar.phpt" role="test" />
     <file name="frontcontroller11.phar.phpt" role="test" />
     <file name="frontcontroller12.phar.phpt" role="test" />
     <file name="frontcontroller13.phar.phpt" role="test" />
     <file name="frontcontroller14.phar.phpt" role="test" />
     <file name="frontcontroller15.phar.phpt" role="test" />
     <file name="frontcontroller16.phar.phpt" role="test" />
     <file name="frontcontroller17.phar.phpt" role="test" />
     <file name="frontcontroller18.phar.phpt" role="test" />
     <file name="frontcontroller19.phar.phpt" role="test" />
     <file name="frontcontroller20.phar.phpt" role="test" />
     <file name="frontcontroller21.phar.phpt" role="test" />
     <file name="links.phpt" role="test" />
     <file name="links2.phpt" role="test" />
     <file name="links3.phpt" role="test" />
     <file name="links4.phpt" role="test" />
     <file name="links5.phpt" role="test" />
     <file name="links6.phpt" role="test" />
     <file name="open_for_write_existing.phpt" role="test" />
     <file name="open_for_write_existing_b.phpt" role="test" />
     <file name="open_for_write_existing_b_5_2.phpt" role="test" />
     <file name="open_for_write_existing_c.phpt" role="test" />
     <file name="open_for_write_existing_c_5_2.phpt" role="test" />
     <file name="open_for_write_newfile.phpt" role="test" />
     <file name="open_for_write_newfile_b.phpt" role="test" />
     <file name="open_for_write_newfile_b_5_2.phpt" role="test" />
     <file name="open_for_write_newfile_c.phpt" role="test" />
     <file name="open_for_write_newfile_c_5_2.phpt" role="test" />
     <file name="phar_begin_setstub_commit.phpt" role="test" />
     <file name="phar_begin_setstub_commitU.phpt" role="test" />
     <file name="phar_buildfromiterator4.phpt" role="test" />
     <file name="phar_buildfromiterator5.phpt" role="test" />
     <file name="phar_buildfromiterator6.phpt" role="test" />
     <file name="phar_buildfromiterator7.phpt" role="test" />
     <file name="phar_buildfromiterator8.phpt" role="test" />
     <file name="phar_buildfromiterator9.phpt" role="test" />
     <file name="phar_commitwrite.phpt" role="test" />
     <file name="phar_convert_phar.phpt" role="test" />
     <file name="phar_convert_phar2.phpt" role="test" />
     <file name="phar_convert_phar3.phpt" role="test" />
     <file name="phar_convert_phar4.phpt" role="test" />
     <file name="phar_copy.phpt" role="test" />
     <file name="phar_magic.phpt" role="test" />
     <file name="phar_setalias.phpt" role="test" />
     <file name="phar_setalias2.phpt" role="test" />
     <file name="phar_setdefaultstub.phpt" role="test" />
     <file name="phar_setsignaturealgo2.phpt" role="test" />
     <file name="phar_stub.phpt" role="test" />
     <file name="phar_stub_error.phpt" role="test" />
     <file name="refcount1.phpt" role="test" />
     <file name="refcount1_5_2.phpt" role="test" />
     <file name="rename.phpt" role="test" />
     <file name="rename_dir.phpt" role="test" />
     <file name="require_hash.phpt" role="test" />
     <file name="rmdir.phpt" role="test" />
     <file name="tar_001.phpt" role="test" />
     <file name="tar_002.phpt" role="test" />
     <file name="tar_003.phpt" role="test" />
     <file name="tar_004.phpt" role="test" />
     <file name="tar_004U.phpt" role="test" />
     <file name="tar_bz2.phpt" role="test" />
     <file name="tar_bz2U.phpt" role="test" />
     <file name="tar_gzip.phpt" role="test" />
     <file name="tar_gzipU.phpt" role="test" />
     <file name="tar_makebz2.phpt" role="test" />
     <file name="tar_makegz.phpt" role="test" />
     <file name="tar_nohash.phpt" role="test" />
     <file name="tar_nostub.phpt" role="test" />
     <file name="tar_openssl_hash.phpt" role="test" />
     <file name="truncated.phpt" role="test" />
    </dir> <!-- /tests/tar -->
    <dir name="zip">
     <dir name="files">
      <file name="badalias1.phar.zip" role="test" />
      <file name="badalias2.phar.zip" role="test" />
      <file name="badalias3.phar.zip" role="test" />
      <file name="badalias4.phar.zip" role="test" />
      <file name="badalias5.phar.zip" role="test" />
      <file name="bz2_alias.phar.zip" role="test" />
      <file name="bzip2.zip" role="test" />
      <file name="cdir_offset.zip" role="test" />
      <file name="compress_unsup1.zip" role="test" />
      <file name="compress_unsup2.zip" role="test" />
      <file name="compress_unsup3.zip" role="test" />
      <file name="compress_unsup4.zip" role="test" />
      <file name="compress_unsup5.zip" role="test" />
      <file name="compress_unsup6.zip" role="test" />
      <file name="compress_unsup7.zip" role="test" />
      <file name="compress_unsup9.zip" role="test" />
      <file name="compress_unsup10.zip" role="test" />
      <file name="compress_unsup14.zip" role="test" />
      <file name="compress_unsup18.zip" role="test" />
      <file name="compress_unsup19.zip" role="test" />
      <file name="compress_unsup97.zip" role="test" />
      <file name="compress_unsup98.zip" role="test" />
      <file name="compress_unsupunknown.zip" role="test" />
      <file name="corrupt2.php.inc" role="test" />
      <file name="corrupt3.php.inc" role="test" />
      <file name="corrupt_count1.php.inc" role="test" />
      <file name="corrupt_zipmaker.php.inc" role="test" />
      <file name="count1.zip" role="test" />
      <file name="count2.zip" role="test" />
      <file name="disknumber.zip" role="test" />
      <file name="encrypted.zip" role="test" />
      <file name="extralen_toolong.zip" role="test" />
      <file name="filecomment.zip" role="test" />
      <file name="frontcontroller.phar.inc" role="test" />
      <file name="frontcontroller.phar.zip" role="test" />
      <file name="frontcontroller2.phar.inc" role="test" />
      <file name="frontcontroller2.phar.zip" role="test" />
      <file name="frontcontroller3.phar.inc" role="test" />
      <file name="frontcontroller3.phar.zip" role="test" />
      <file name="frontcontroller4.phar.inc" role="test" />
      <file name="frontcontroller4.phar.zip" role="test" />
      <file name="frontcontroller5.phar.inc" role="test" />
      <file name="frontcontroller5.phar.zip" role="test" />
      <file name="frontcontroller6.phar.inc" role="test" />
      <file name="frontcontroller6.phar.zip" role="test" />
      <file name="frontcontroller7.phar.inc" role="test" />
      <file name="frontcontroller7.phar.zip" role="test" />
      <file name="frontcontroller8.phar.inc" role="test" />
      <file name="frontcontroller8.phar.zip" role="test" />
      <file name="frontcontroller9.phar.inc" role="test" />
      <file name="frontcontroller9.phar.zip" role="test" />
      <file name="frontcontroller10.phar.inc" role="test" />
      <file name="frontcontroller10.phar.zip" role="test" />
      <file name="frontcontroller11.phar.inc" role="test" />
      <file name="frontcontroller11.phar.zip" role="test" />
      <file name="frontcontroller12.phar.inc" role="test" />
      <file name="frontcontroller12.phar.zip" role="test" />
      <file name="make_invalid_tar.php.inc" role="test" />
      <file name="metadata.phar.inc" role="test" />
      <file name="metadata.phar.zip" role="test" />
      <file name="nozipend.zip" role="test" />
      <file name="odt.odt" role="test" />
      <file name="stdin.zip" role="test" />
      <file name="test.odt" role="test" />
      <file name="truncfilename.zip" role="test" />
      <file name="zip.zip" role="test" />
      <file name="zipmaker.php.inc" role="test" />
      <file name="zlib_alias.phar.zip" role="test" />
     </dir> <!-- /tests/zip/files -->
     <file name="033.phpt" role="test" />
     <file name="033a.phpt" role="test" />
     <file name="alias_acrobatics.phpt" role="test" />
     <file name="all.phpt" role="test" />
     <file name="allU.phpt" role="test" />
     <file name="badalias.phpt" role="test" />
     <file name="bug48791.phpt" role="test" />
     <file name="bzip2.phpt" role="test" />
     <file name="corrupt_001.phpt" role="test" />
     <file name="corrupt_002.phpt" role="test" />
     <file name="corrupt_003.phpt" role="test" />
     <file name="corrupt_004.phpt" role="test" />
     <file name="corrupt_005.phpt" role="test" />
     <file name="corrupt_006.phpt" role="test" />
     <file name="corrupt_007.phpt" role="test" />
     <file name="corrupt_008.phpt" role="test" />
     <file name="corrupt_009.phpt" role="test" />
     <file name="corrupt_010.phpt" role="test" />
     <file name="create_new_and_modify.phpt" role="test" />
     <file name="create_new_phar_b.phpt" role="test" />
     <file name="delete.phpt" role="test" />
     <file name="delete_in_phar.phpt" role="test" />
     <file name="delete_in_phar_b.phpt" role="test" />
     <file name="delete_in_phar_confirm.phpt" role="test" />
     <file name="dir.phpt" role="test" />
     <file name="exists_as_phar.phpt" role="test" />
     <file name="frontcontroller1.phar.phpt" role="test" />
     <file name="frontcontroller2.phar.phpt" role="test" />
     <file name="frontcontroller3.phar.phpt" role="test" />
     <file name="frontcontroller4.phar.phpt" role="test" />
     <file name="frontcontroller5.phar.phpt" role="test" />
     <file name="frontcontroller6.phar.phpt" role="test" />
     <file name="frontcontroller7.phar.phpt" role="test" />
     <file name="frontcontroller8.phar.phpt" role="test" />
     <file name="frontcontroller9.phar.phpt" role="test" />
     <file name="frontcontroller10.phar.phpt" role="test" />
     <file name="frontcontroller11.phar.phpt" role="test" />
     <file name="frontcontroller12.phar.phpt" role="test" />
     <file name="frontcontroller13.phar.phpt" role="test" />
     <file name="frontcontroller14.phar.phpt" role="test" />
     <file name="frontcontroller15.phar.phpt" role="test" />
     <file name="frontcontroller16.phar.phpt" role="test" />
     <file name="frontcontroller17.phar.phpt" role="test" />
     <file name="frontcontroller18.phar.phpt" role="test" />
     <file name="frontcontroller19.phar.phpt" role="test" />
     <file name="frontcontroller20.phar.phpt" role="test" />
     <file name="frontcontroller21.phar.phpt" role="test" />
     <file name="getalias.phpt" role="test" />
     <file name="largezip.phpt" role="test" />
     <file name="metadata_write_commit.phpt" role="test" />
     <file name="metadata_write_commitU.phpt" role="test" />
     <file name="notphar.phpt" role="test" />
     <file name="odt.phpt" role="test" />
     <file name="open_for_write_existing.phpt" role="test" />
     <file name="open_for_write_existing_b.phpt" role="test" />
     <file name="open_for_write_existing_b_5_2.phpt" role="test" />
     <file name="open_for_write_existing_c.phpt" role="test" />
     <file name="open_for_write_existing_c_5_2.phpt" role="test" />
     <file name="open_for_write_newfile.phpt" role="test" />
     <file name="open_for_write_newfile_b.phpt" role="test" />
     <file name="open_for_write_newfile_b_5_2.phpt" role="test" />
     <file name="open_for_write_newfile_c.phpt" role="test" />
     <file name="open_for_write_newfile_c_5_2.phpt" role="test" />
     <file name="phar_begin_setstub_commit.phpt" role="test" />
     <file name="phar_begin_setstub_commitU.phpt" role="test" />
     <file name="phar_buildfromiterator4.phpt" role="test" />
     <file name="phar_buildfromiterator5.phpt" role="test" />
     <file name="phar_buildfromiterator6.phpt" role="test" />
     <file name="phar_buildfromiterator7.phpt" role="test" />
     <file name="phar_buildfromiterator8.phpt" role="test" />
     <file name="phar_buildfromiterator9.phpt" role="test" />
     <file name="phar_commitwrite.phpt" role="test" />
     <file name="phar_convert_phar.phpt" role="test" />
     <file name="phar_copy.phpt" role="test" />
     <file name="phar_magic.phpt" role="test" />
     <file name="phar_magicU.phpt" role="test" />
     <file name="phar_oo_compressallbz2.phpt" role="test" />
     <file name="phar_oo_compressallgz.phpt" role="test" />
     <file name="phar_setalias.phpt" role="test" />
     <file name="phar_setalias2.phpt" role="test" />
     <file name="phar_setdefaultstub.phpt" role="test" />
     <file name="phar_setsignaturealgo2.phpt" role="test" />
     <file name="phar_stub.phpt" role="test" />
     <file name="phar_stub_error.phpt" role="test" />
     <file name="refcount1.phpt" role="test" />
     <file name="refcount1_5_2.phpt" role="test" />
     <file name="rename.phpt" role="test" />
     <file name="rename_dir.phpt" role="test" />
     <file name="rmdir.phpt" role="test" />
     <file name="unixzip.phpt" role="test" />
     <file name="zlib.phpt" role="test" />
    </dir> <!-- /tests/zip -->
    <file name="001.phpt" role="test" />
    <file name="002.phpt" role="test" />
    <file name="003.phpt" role="test" />
    <file name="003a.phpt" role="test" />
    <file name="004.phpt" role="test" />
    <file name="005.phpt" role="test" />
    <file name="006.phpt" role="test" />
    <file name="007.phpt" role="test" />
    <file name="008.phpt" role="test" />
    <file name="009.phpt" role="test" />
    <file name="010.phpt" role="test" />
    <file name="011.phpt" role="test" />
    <file name="012.phpt" role="test" />
    <file name="013.phpt" role="test" />
    <file name="014.phpt" role="test" />
    <file name="015.phpt" role="test" />
    <file name="015b.phpt" role="test" />
    <file name="016.phpt" role="test" />
    <file name="016b.phpt" role="test" />
    <file name="017.phpt" role="test" />
    <file name="017U.phpt" role="test" />
    <file name="018.phpt" role="test" />
    <file name="018U.phpt" role="test" />
    <file name="019.phpt" role="test" />
    <file name="019b.phpt" role="test" />
    <file name="019bU.phpt" role="test" />
    <file name="019c.phpt" role="test" />
    <file name="019cU.phpt" role="test" />
    <file name="020.phpt" role="test" />
    <file name="021.phpt" role="test" />
    <file name="022.phpt" role="test" />
    <file name="023.phpt" role="test" />
    <file name="024.phpt" role="test" />
    <file name="025.phpt" role="test" />
    <file name="026.phpt" role="test" />
    <file name="027.phpt" role="test" />
    <file name="027U.phpt" role="test" />
    <file name="028.phpt" role="test" />
    <file name="029.phpt" role="test" />
    <file name="030.phpt" role="test" />
    <file name="031.phpt" role="test" />
    <file name="032.phpt" role="test" />
    <file name="033.phpt" role="test" />
    <file name="033a.phpt" role="test" />
    <file name="addfuncs.phpt" role="test" />
    <file name="alias_acrobatics.phpt" role="test" />
    <file name="badparameters.phpt" role="test" />
    <file name="bug13727.phpt" role="test" />
    <file name="bug13786.phpt" role="test" />
    <file name="bug45218_SLOWTEST.phpt" role="test" />
    <file name="bug45218_SLOWTESTU.phpt" role="test" />
    <file name="bug46032.phpt" role="test" />
    <file name="bug46060.phpt" role="test" />
    <file name="bug46178.phpt" role="test" />
    <file name="bug47085.phpt" role="test" />
    <file name="bug48377.2.phpt" role="test" />
    <file name="bug48377.phpt" role="test" />
    <file name="cached_manifest_1.phpt" role="test" />
    <file name="cached_manifest_1U.phpt" role="test" />
    <file name="create_new_and_modify.phpt" role="test" />
    <file name="create_new_phar.phpt" role="test" />
    <file name="create_new_phar_b.phpt" role="test" />
    <file name="create_new_phar_c.phpt" role="test" />
    <file name="create_path_error.phpt" role="test" />
    <file name="delete.phpt" role="test" />
    <file name="delete_in_phar.phpt" role="test" />
    <file name="delete_in_phar_b.phpt" role="test" />
    <file name="delete_in_phar_confirm.phpt" role="test" />
    <file name="dir.phpt" role="test" />
    <file name="fgc_edgecases.phpt" role="test" />
    <file name="file_get_contents.phpt" role="test" />
    <file name="fopen.phpt" role="test" />
    <file name="fopen5.2.phpt" role="test" />
    <file name="fopen_edgecases.phpt" role="test" />
    <file name="fopen_edgecases2.phpt" role="test" />
    <file name="fopen_edgecases2U.phpt" role="test" />
    <file name="front.phar.phpt" role="test" />
    <file name="frontcontroller1.phpt" role="test" />
    <file name="frontcontroller2.phpt" role="test" />
    <file name="frontcontroller3.phpt" role="test" />
    <file name="frontcontroller4.phpt" role="test" />
    <file name="frontcontroller5.phpt" role="test" />
    <file name="frontcontroller6.phpt" role="test" />
    <file name="frontcontroller7.phpt" role="test" />
    <file name="frontcontroller8.phpt" role="test" />
    <file name="frontcontroller9.phpt" role="test" />
    <file name="frontcontroller10.phpt" role="test" />
    <file name="frontcontroller11.phpt" role="test" />
    <file name="frontcontroller12.phpt" role="test" />
    <file name="frontcontroller13.phpt" role="test" />
    <file name="frontcontroller14.phpt" role="test" />
    <file name="frontcontroller15.phpt" role="test" />
    <file name="frontcontroller16.phpt" role="test" />
    <file name="frontcontroller17.phpt" role="test" />
    <file name="frontcontroller18.phpt" role="test" />
    <file name="frontcontroller19.phpt" role="test" />
    <file name="frontcontroller20.phpt" role="test" />
    <file name="frontcontroller21.phpt" role="test" />
    <file name="frontcontroller22.phpt" role="test" />
    <file name="frontcontroller23.phpt" role="test" />
    <file name="frontcontroller24.phpt" role="test" />
    <file name="frontcontroller25.phpt" role="test" />
    <file name="frontcontroller26.phpt" role="test" />
    <file name="frontcontroller27.phpt" role="test" />
    <file name="frontcontroller28.phpt" role="test" />
    <file name="frontcontroller29.phpt" role="test" />
    <file name="frontcontroller30.phpt" role="test" />
    <file name="frontcontroller31.phpt" role="test" />
    <file name="frontcontroller32.phpt" role="test" />
    <file name="frontcontroller33.phpt" role="test" />
    <file name="frontcontroller34.phpt" role="test" />
    <file name="include_path.phpt" role="test" />
    <file name="include_path_advanced.phpt" role="test" />
    <file name="ini_set.phpt" role="test" />
    <file name="ini_set_off.phpt" role="test" />
    <file name="ini_set_offU.phpt" role="test" />
    <file name="invalid_alias.phpt" role="test" />
    <file name="invalid_setstubalias.phpt" role="test" />
    <file name="metadata_read.phpt" role="test" />
    <file name="metadata_readU.phpt" role="test" />
    <file name="metadata_write.phpt" role="test" />
    <file name="metadata_writeU.phpt" role="test" />
    <file name="metadata_write_commit.phpt" role="test" />
    <file name="metadata_write_commitU.phpt" role="test" />
    <file name="mkdir.phpt" role="test" />
    <file name="mounteddir.phpt" role="test" />
    <file name="mounteddirU.phpt" role="test" />
    <file name="nophar.phpt" role="test" />
    <file name="nophar_web.phpt" role="test" />
    <file name="opendir.phpt" role="test" />
    <file name="opendir_edgecases.phpt" role="test" />
    <file name="open_for_write_existing.phpt" role="test" />
    <file name="open_for_write_existing_b.phpt" role="test" />
    <file name="open_for_write_existing_b_5_2.phpt" role="test" />
    <file name="open_for_write_existing_c.phpt" role="test" />
    <file name="open_for_write_existing_c_5_2.phpt" role="test" />
    <file name="open_for_write_newfile.phpt" role="test" />
    <file name="open_for_write_newfile_b.phpt" role="test" />
    <file name="open_for_write_newfile_b_5_2.phpt" role="test" />
    <file name="open_for_write_newfile_c.phpt" role="test" />
    <file name="open_for_write_newfile_c_5_2.phpt" role="test" />
    <file name="pharfileinfo_chmod.phpt" role="test" />
    <file name="pharfileinfo_compression.phpt" role="test" />
    <file name="pharfileinfo_construct.phpt" role="test" />
    <file name="pharfileinfo_destruct.phpt" role="test" />
    <file name="pharfileinfo_getcrc32.phpt" role="test" />
    <file name="pharfileinfo_setmetadata.phpt" role="test" />
    <file name="phar_begin_setstub_commit.phpt" role="test" />
    <file name="phar_begin_setstub_commitU.phpt" role="test" />
    <file name="phar_buildfromdirectory1.phpt" role="test" />
    <file name="phar_buildfromdirectory2.phpt" role="test" />
    <file name="phar_buildfromdirectory3.phpt" role="test" />
    <file name="phar_buildfromdirectory4.phpt" role="test" />
    <file name="phar_buildfromdirectory5.phpt" role="test" />
    <file name="phar_buildfromdirectory6.phpt" role="test" />
    <file name="phar_buildfromiterator1.phpt" role="test" />
    <file name="phar_buildfromiterator2.phpt" role="test" />
    <file name="phar_buildfromiterator3.phpt" role="test" />
    <file name="phar_buildfromiterator4.phpt" role="test" />
    <file name="phar_buildfromiterator5.phpt" role="test" />
    <file name="phar_buildfromiterator6.phpt" role="test" />
    <file name="phar_buildfromiterator7.phpt" role="test" />
    <file name="phar_buildfromiterator8.phpt" role="test" />
    <file name="phar_buildfromiterator9.phpt" role="test" />
    <file name="phar_buildfromiterator10.phpt" role="test" />
    <file name="phar_bz2.phpt" role="test" />
    <file name="phar_commitwrite.phpt" role="test" />
    <file name="phar_construct_invalidurl.phpt" role="test" />
    <file name="phar_convert_again.phpt" role="test" />
    <file name="phar_convert_repeated.phpt" role="test" />
    <file name="phar_convert_repeated_b.phpt" role="test" />
    <file name="phar_convert_tar.phpt" role="test" />
    <file name="phar_convert_tar2.phpt" role="test" />
    <file name="phar_convert_tar3.phpt" role="test" />
    <file name="phar_convert_zip.phpt" role="test" />
    <file name="phar_copy.phpt" role="test" />
    <file name="phar_createdefaultstub.phpt" role="test" />
    <file name="phar_create_in_cwd.phpt" role="test" />
    <file name="phar_ctx_001.phpt" role="test" />
    <file name="phar_decompress.phpt" role="test" />
    <file name="phar_dir_iterate.phpt" role="test" />
    <file name="phar_dotted_path.phpt" role="test" />
    <file name="phar_extract.phpt" role="test" />
    <file name="phar_extract2.phpt" role="test" />
    <file name="phar_extract3.phpt" role="test" />
    <file name="phar_get_supportedcomp1.phpt" role="test" />
    <file name="phar_get_supportedcomp2.phpt" role="test" />
    <file name="phar_get_supportedcomp3.phpt" role="test" />
    <file name="phar_get_supportedcomp4.phpt" role="test" />
    <file name="phar_get_supported_signatures_001.phpt" role="test" />
    <file name="phar_get_supported_signatures_001a.phpt" role="test" />
    <file name="phar_get_supported_signatures_002.phpt" role="test" />
    <file name="phar_get_supported_signatures_002a.phpt" role="test" />
    <file name="phar_gobyebye.phpt" role="test" />
    <file name="phar_gzip.phpt" role="test" />
    <file name="phar_gzipU.phpt" role="test" />
    <file name="phar_isvalidpharfilename.phpt" role="test" />
    <file name="phar_magic.phpt" role="test" />
    <file name="phar_metadata_read.phpt" role="test" />
    <file name="phar_metadata_readU.phpt" role="test" />
    <file name="phar_metadata_write.phpt" role="test" />
    <file name="phar_metadata_writeU.phpt" role="test" />
    <file name="phar_mount.phpt" role="test" />
    <file name="phar_offset_check.phpt" role="test" />
    <file name="phar_offset_get_error.phpt" role="test" />
    <file name="phar_oo_001.phpt" role="test" />
    <file name="phar_oo_001U.phpt" role="test" />
    <file name="phar_oo_002.phpt" role="test" />
    <file name="phar_oo_002U.phpt" role="test" />
    <file name="phar_oo_003.phpt" role="test" />
    <file name="phar_oo_004.phpt" role="test" />
    <file name="phar_oo_004U.phpt" role="test" />
    <file name="phar_oo_005.phpt" role="test" />
    <file name="phar_oo_005U.phpt" role="test" />
    <file name="phar_oo_005_5.2.phpt" role="test" />
    <file name="phar_oo_006.phpt" role="test" />
    <file name="phar_oo_007.phpt" role="test" />
    <file name="phar_oo_008.phpt" role="test" />
    <file name="phar_oo_009.phpt" role="test" />
    <file name="phar_oo_010.phpt" role="test" />
    <file name="phar_oo_011.phpt" role="test" />
    <file name="phar_oo_011b.phpt" role="test" />
    <file name="phar_oo_012.phpt" role="test" />
    <file name="phar_oo_012b.phpt" role="test" />
    <file name="phar_oo_012_confirm.phpt" role="test" />
    <file name="phar_oo_compressallbz2.phpt" role="test" />
    <file name="phar_oo_compressallgz.phpt" role="test" />
    <file name="phar_oo_compressed_001.phpt" role="test" />
    <file name="phar_oo_compressed_001b.phpt" role="test" />
    <file name="phar_oo_compressed_002.phpt" role="test" />
    <file name="phar_oo_compressed_002b.phpt" role="test" />
    <file name="phar_oo_getcontents.phpt" role="test" />
    <file name="phar_oo_getcontentsgz.phpt" role="test" />
    <file name="phar_oo_getmodified.phpt" role="test" />
    <file name="phar_oo_iswriteable.phpt" role="test" />
    <file name="phar_oo_nosig.phpt" role="test" />
    <file name="phar_oo_uncompressall.phpt" role="test" />
    <file name="phar_running.phpt" role="test" />
    <file name="phar_setalias.phpt" role="test" />
    <file name="phar_setalias2.phpt" role="test" />
    <file name="phar_setdefaultstub.phpt" role="test" />
    <file name="phar_setsignaturealgo1.phpt" role="test" />
    <file name="phar_setsignaturealgo2.phpt" role="test" />
    <file name="phar_stub.phpt" role="test" />
    <file name="phar_stub_error.phpt" role="test" />
    <file name="phar_stub_write.phpt" role="test" />
    <file name="phar_stub_write_file.phpt" role="test" />
    <file name="phar_unlinkarchive.phpt" role="test" />
    <file name="phpinfo_001.phpt" role="test" />
    <file name="phpinfo_002.phpt" role="test" />
    <file name="phpinfo_003.phpt" role="test" />
    <file name="phpinfo_004.phpt" role="test" />
    <file name="readfile.phpt" role="test" />
    <file name="readfile_edgecases.phpt" role="test" />
    <file name="readfile_edgecasesU.phpt" role="test" />
    <file name="refcount1.phpt" role="test" />
    <file name="refcount1_5_2.phpt" role="test" />
    <file name="rename.phpt" role="test" />
    <file name="rename_dir.phpt" role="test" />
    <file name="rename_dir_and_mount.phpt" role="test" />
    <file name="rmdir.phpt" role="test" />
    <file name="security.phpt" role="test" />
    <file name="stat.phpt" role="test" />
    <file name="stat2.phpt" role="test" />
    <file name="stat2_5.3.phpt" role="test" />
    <file name="test_alias_unset.phpt" role="test" />
    <file name="test_signaturealgos.phpt" role="test" />
    <file name="test_unset.phpt" role="test" />
    <file name="webphar_compilefail.phpt" role="test" />
    <file name="withphar.phpt" role="test" />
    <file name="withphar_web.phpt" role="test" />
    <file name="zf_test.phpt" role="test" />
   </dir> <!-- /tests -->
   <file name="build_precommand.php" role="php" />
   <file name="config.m4" role="src" />
   <file name="config.w32" role="src" />
   <file name="CREDITS" role="doc" />
   <file name="dirstream.c" role="src" />
   <file name="dirstream.h" role="src" />
   <file name="func_interceptors.c" role="src" />
   <file name="func_interceptors.h" role="src" />
   <file name="gdbhelp" role="data" />
   <file name="LICENSE" role="doc" />
   <file name="Makefile.frag" role="src" />
   <file name="makestub.php" role="php" />
   <file name="phar.c" role="src" />
   <file name="pharzip.h" role="src" />
   <file name="phar_internal.h" role="src" />
   <file name="phar_object.c" role="src" />
   <file name="phar_path_check.c" role="src" />
   <file name="phar_path_check.re" role="src" />
   <file name="php_phar.h" role="src" />
   <file name="shortarc.php" role="php" />
   <file name="stream.c" role="src" />
   <file name="stream.h" role="src" />
   <file name="stub.h" role="src" />
   <file name="tar.c" role="src" />
   <file name="tar.h" role="src" />
   <file name="TODO" role="doc" />
   <file name="util.c" role="src" />
   <file name="zip.c" role="src" />
  </dir> <!-- / -->
 </contents>
 <dependencies>
  <required>
   <php>
    <min>5.2.1</min>
   </php>
   <pearinstaller>
    <min>1.4.3</min>
   </pearinstaller>
  </required>
  <optional>
   <package>
    <name>bz2</name>
    <channel>pecl.php.net</channel>
    <providesextension>bz2</providesextension>
   </package>
   <package>
    <name>hash</name>
    <channel>pecl.php.net</channel>
    <providesextension>hash</providesextension>
   </package>
   <extension>
    <name>spl</name>
   </extension>
   <extension>
    <name>zlib</name>
   </extension>
  </optional>
 </dependencies>
 <providesextension>phar</providesextension>
 <extsrcrelease />
 <changelog>
  <release>
   <version>
    <release>2.0.0</release>
    <api>1.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2009-07-26</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
BC BREAKING RELEASE
 BC breaks:
 * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),
   Phar::compressFiles()/decompressFiles() and PharFileInfo-&gt;compress()/decompress().
 * phar.extract_list and Phar::getExtractList() are removed

Major feature functionality release
 * phar.cache_list allows web-based phar applications to run at equal or faster than
   their on-disk equivalent [Greg]
 * new default stub allows running of phar-based phars without phar extension [Greg/Steph]
 * add support for tar-based and zip-based phar archives [Greg]
 * add support for OpenSSL-based true signatures [Greg]
 * add support for signatures to tar-based phar archives [Greg]
 * add Phar::isFileFormat() [Greg]
 * add Phar::convertToExecutable(), Phar::convertToData() [Greg]
 * add Phar::compress() [Greg]
 * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to
   decompressFiles() [Greg]
 * conversion to compressed or to other file formats automatically copies the archive
   to a new extension (i.e. &quot;.phar&quot; to &quot;.phar.tar&quot; or &quot;.tar&quot; to &quot;.tar.gz&quot;) [Steph]
 * add Phar::webPhar() for running a web-based application unmodified
   directly from a phar archive [Greg]
 * file functions (fopen-based and stat-based) can be instructed to only look for
   relative paths within a phar via Phar::interceptFileFuncs()
 * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]
   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]
 * paths with . and .. work (phar://blah.phar/a/../b.php =&gt; phar://blah.phar/b.php) [Greg]
 * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]
 * add option to compress the entire phar file for phar/tar file format [Greg]
 * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]
 * implement Phar::copy(string $from, string $to) [Greg]
 * implement Phar::running(), returns path or URL to currently executed phar
 * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]
 * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]
 * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]
 * add Phar::delete() [Greg]
 * implement Phar::unlinkArchive() [Greg]

Security addition
 * aliases are validated so that they contain no directory separators as intended
 * on conversion to other formats, user-supplied aliases are validated

Changes since 2.0.0RC2:
 fixed PHP Bug #49021: phar tar signature algorithm reports as Unknown (0) in
 getSignature() call
 fixed PHP Bug #49020: phar misinterprets ustar long filename standard
 fixed PHP Bug #49018: phar tar stores long filenames with prefix/name reversed
 fixed PHP Bug #48791: open office files always reported as corrupted
 fixed PHP Bug #48783: make install will fail saying phar file exists
 fixed PHP Bug #48740: PHAR install fails when INSTALL_ROOT is not the final install location
 fixed PHP Bug #48681: openssl signature verification for tar archives broken
 fixed PHP Bug #48377: error message unclear on converting phar with existing file
 fixed isset() on sub-directories (isset(&quot;blah&quot;) if file &quot;blah/foo.php&quot; exists)

 make phar work in PHP 6
Changes since 2.0.0RC1:
 security vulnerability in handling of long tar filenames fixed
 fixed PECL Bug #14646: phar error message unclear with php stream wrappers
 fixed PECL Bug #16338: php_stream_copy_to_stream{,_ex}()
 fixed PHP Bug #48257: PharData throws an exception with non-phar tar
 fixed PHP Bug #47085: rename() returns true even if the file in PHAR does not exist
 fixed PHP Bug #46032: PharData::__construct() - wrong memory read
 fixed PHP Bug #46060: Phar::addEmptyDir() breaks
 fixed PHP Bug #45907: undefined reference to &apos;PHP_SHA512Init&apos;
 fixed PHP Bug #45726: PHP_Archive / Archive.php missing
Changes since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,
 conversion API refactored
Changes since 2.0.0b1: addition of phar.cache_list, many performance improvements and bugfixes
 implement OpenSSL asynchronous true package signing
 add support for package signing to tar-based archives
 require PHP 5.2.1+
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0RC2</release>
    <api>1.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2009-06-04</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
BC BREAKING RELEASE
 BC breaks:
 * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),
   Phar::compressFiles()/decompressFiles() and PharFileInfo-&gt;compress()/decompress().
 * phar.extract_list and Phar::getExtractList() are removed

Major feature functionality release
 * phar.cache_list allows web-based phar applications to run at equal or faster than
   their on-disk equivalent [Greg]
 * new default stub allows running of phar-based phars without phar extension [Greg/Steph]
 * add support for tar-based and zip-based phar archives [Greg]
 * add support for OpenSSL-based true signatures [Greg]
 * add support for signatures to tar-based phar archives [Greg]
 * add Phar::isFileFormat() [Greg]
 * add Phar::convertToExecutable(), Phar::convertToData() [Greg]
 * add Phar::compress() [Greg]
 * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to
   decompressFiles() [Greg]
 * conversion to compressed or to other file formats automatically copies the archive
   to a new extension (i.e. &quot;.phar&quot; to &quot;.phar.tar&quot; or &quot;.tar&quot; to &quot;.tar.gz&quot;) [Steph]
 * add Phar::webPhar() for running a web-based application unmodified
   directly from a phar archive [Greg]
 * file functions (fopen-based and stat-based) can be instructed to only look for
   relative paths within a phar via Phar::interceptFileFuncs()
 * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]
   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]
 * paths with . and .. work (phar://blah.phar/a/../b.php =&gt; phar://blah.phar/b.php) [Greg]
 * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]
 * add option to compress the entire phar file for phar/tar file format [Greg]
 * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]
 * implement Phar::copy(string $from, string $to) [Greg]
 * implement Phar::running(), returns path or URL to currently executed phar
 * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]
 * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]
 * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]
 * add Phar::delete() [Greg]
 * implement Phar::unlinkArchive() [Greg]

Security addition
 * aliases are validated so that they contain no directory separators as intended
 * on conversion to other formats, user-supplied aliases are validated

Changes since 2.0.0RC1:
 security vulnerability in handling of long tar filenames fixed
 fixed PECL Bug #14646: phar error message unclear with php stream wrappers
 fixed PECL Bug #16338: php_stream_copy_to_stream{,_ex}()
 fixed PHP Bug #48257: PharData throws an exception with non-phar tar
 fixed PHP Bug #47085: rename() returns true even if the file in PHAR does not exist
 fixed PHP Bug #46032: PharData::__construct() - wrong memory read
 fixed PHP Bug #46060: Phar::addEmptyDir() breaks
 fixed PHP Bug #45907: undefined reference to &apos;PHP_SHA512Init&apos;
 fixed PHP Bug #45726: PHP_Archive / Archive.php missing
Changes since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,
 conversion API refactored
Changes since 2.0.0b1: addition of phar.cache_list, many performance improvements and bugfixes
 implement OpenSSL asynchronous true package signing
 add support for package signing to tar-based archives
 require PHP 5.2.1+
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0RC1</release>
    <api>1.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2008-08-31</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
BC BREAKING RELEASE
 BC breaks:
 * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),
   Phar::compressFiles()/decompressFiles() and PharFileInfo-&gt;compress()/decompress().
 * phar.extract_list and Phar::getExtractList() are removed

Major feature functionality release
 * phar.cache_list allows web-based phar applications to run at equal or faster than
   their on-disk equivalent [Greg]
 * new default stub allows running of phar-based phars without phar extension [Greg/Steph]
 * add support for tar-based and zip-based phar archives [Greg]
 * add support for OpenSSL-based true signatures [Greg]
 * add support for signatures to tar-based phar archives [Greg]
 * add Phar::isFileFormat() [Greg]
 * add Phar::convertToExecutable(), Phar::convertToData() [Greg]
 * add Phar::compress() [Greg]
 * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to
   decompressFiles() [Greg]
 * conversion to compressed or to other file formats automatically copies the archive
   to a new extension (i.e. &quot;.phar&quot; to &quot;.phar.tar&quot; or &quot;.tar&quot; to &quot;.tar.gz&quot;) [Steph]
 * add Phar::webPhar() for running a web-based application unmodified
   directly from a phar archive [Greg]
 * file functions (fopen-based and stat-based) can be instructed to only look for
   relative paths within a phar via Phar::interceptFileFuncs()
 * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]
   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]
 * paths with . and .. work (phar://blah.phar/a/../b.php =&gt; phar://blah.phar/b.php) [Greg]
 * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]
 * add option to compress the entire phar file for phar/tar file format [Greg]
 * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]
 * implement Phar::copy(string $from, string $to) [Greg]
 * implement Phar::running(), returns path or URL to currently executed phar
 * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]
 * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]
 * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]
 * add Phar::delete() [Greg]
 * implement Phar::unlinkArchive() [Greg]

Security addition
 * aliases are validated so that they contain no directory separators as intended
 * on conversion to other formats, user-supplied aliases are validated

Changes since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,
 conversion API refactored
Changes since 2.0.0b1: addition of phar.cache_list, many performance improvements and bugfixes
 implement OpenSSL asynchronous true package signing
 add support for package signing to tar-based archives
 require PHP 5.2.1+
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0b1</release>
    <api>1.1.1</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2008-05-12</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
BC BREAKING RELEASE
 BC breaks:
 * Phar object Compression API is rewritten.  Use Phar::compress() and decompress(),
   Phar::compressFiles()/decompressFiles() and PharFileInfo-&gt;compress()/decompress().
 * phar.extract_list and Phar::getExtractList() are removed

Major feature functionality release
 * new default stub allows running of phar-based phars without phar extension [Greg/Steph]
 * add support for tar-based and zip-based phar archives [Greg]
 * add Phar::isFileFormat() [Greg]
 * add Phar::convertToExecutable(), Phar::convertToData() [Greg]
 * add Phar::compress() [Greg]
 * rename Phar::compressAllFiles() to compressFiles(), uncompressAllFiles() to
   decompressFiles() [Greg]
 * conversion to compressed or to other file formats automatically copies the archive
   to a new extension (i.e. &quot;.phar&quot; to &quot;.phar.tar&quot; or &quot;.tar&quot; to &quot;.tar.gz&quot;) [Steph]
 * add Phar::webPhar() for running a web-based application unmodified
   directly from a phar archive [Greg]
 * file functions (fopen-based and stat-based) can be instructed to only look for
   relative paths within a phar via Phar::interceptFileFuncs()
 * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]
   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]
 * paths with . and .. work (phar://blah.phar/a/../b.php =&gt; phar://blah.phar/b.php) [Greg]
 * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]
 * add option to compress the entire phar file for phar/tar file format [Greg]
 * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]
 * implement Phar::copy(string $from, string $to) [Greg]
 * implement Phar::running(), returns path or URL to currently executed phar
 * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]
 * implement Phar::buildFromDirectory(string $base_directory[, string $regex]) [Steph]
 * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]
 * add Phar::delete() [Greg]
 * implement Phar::unlinkArchive() [Greg]

Security addition
 * aliases are validated so that they contain no directory separators as intended
 * on conversion to other formats, user-supplied aliases are validated

Changes since 2.0.0a2: many bugfixes, removal of phar.extract_list, compression API refactored,
 conversion API refactored
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0a2</release>
    <api>1.1.1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2008-03-27</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
Major feature functionality release
 * new default stub allows running of phar-based phars without phar extension [Greg/Steph]
 * add support for tar-based and zip-based phar archives [Greg]
 * add Phar::isTar(), Phar::isZip(), and Phar::isPhar() [Greg]
 * add Phar::convertToTar(), Phar::convertToZip(), and Phar::convertToPhar() [Greg]
 * add Phar::compress() [Greg]
 * conversion to compressed or to other file formats automatically copies the archive
   to a new extension (i.e. &quot;.phar&quot; to &quot;.phar.tar&quot; or &quot;.tar&quot; to &quot;.tar.gz&quot;) [Steph]
 * add Phar::webPhar() for running a web-based application unmodified
   directly from a phar archive [Greg]
 * file functions (fopen-based and stat-based) can be instructed to only look for
   relative paths within a phar via Phar::interceptFileFuncs()
 * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]
   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]
 * paths with . and .. work (phar://blah.phar/a/../b.php =&gt; phar://blah.phar/b.php) [Greg]
 * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]
 * add option to compress the entire phar file for phar/tar file format [Greg]
 * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]
 * implement Phar::copy(string $from, string $to) [Greg]
 * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]
 * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]
 * add Phar::delete() [Greg]

Changes since 2.0.0a1: fix build in PHP 5.2
   </notes>
  </release>
  <release>
   <version>
    <release>2.0.0a1</release>
    <api>1.1.1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <date>2008-03-26</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
Major feature functionality release
 * new default stub allows running of phar-based phars without phar extension [Greg/Steph]
 * add support for tar-based and zip-based phar archives [Greg]
 * add Phar::isTar(), Phar::isZip(), and Phar::isPhar() [Greg]
 * add Phar::convertToTar(), Phar::convertToZip(), and Phar::convertToPhar() [Greg]
 * add Phar::compress() [Greg]
 * conversion to compressed or to other file formats automatically copies the archive
   to a new extension (i.e. &quot;.phar&quot; to &quot;.phar.tar&quot; or &quot;.tar&quot; to &quot;.tar.gz&quot;) [Steph]
 * add Phar::webPhar() for running a web-based application unmodified
   directly from a phar archive [Greg]
 * file functions (fopen-based and stat-based) can be instructed to only look for
   relative paths within a phar via Phar::interceptFileFuncs()
 * add PharData class to allow manipulation/creation of non-executable tar and zip archives. [Steph]
   non-executable tar/zip manipulation is allowed even when phar.readonly=1 [Greg]
 * paths with . and .. work (phar://blah.phar/a/../b.php =&gt; phar://blah.phar/b.php) [Greg]
 * add support for mkdir()/rmdir() and support for empty directories to phar file format [Greg]
 * add option to compress the entire phar file for phar/tar file format [Greg]
 * implement Phar::isCompressed() returning 0, Phar::GZ or Phar::BZ2 [Greg]
 * implement Phar::copy(string $from, string $to) [Greg]
 * implement Phar::buildFromIterator(Iterator $it[, string $base_directory]) [Greg]
 * implement Phar::mount() for mounting external paths or files to locations inside a phar [Greg]
 * add Phar::delete() [Greg]
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.1</release>
    <api>1.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-08-24</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
* add Phar::setAlias() [Greg]
* fix too many open file handles issue [Greg]
* fix rename [Greg]
* add Phar::getAlias() [Marcus]
* Made -a optional in pack subcommand of phar.phar [Marcus]
* Fix issue with apache module and extracted archives [Marcus]
* Send all error messages to stderr in phar.phar [Marcus]
* Added new subcommands add and delete to phar.phar [Marcus]
* Made Phar::loadPhar() and Phar::mapPhar() ignore extracted archives [Marcus]
* Fix issue with compressed entries and uncompressing entries [Marcus]
* Verify stubs before writing [Marcus]
* Always use longest stub end to avoid issues with length field [Marcus]
   </notes>
  </release>
  <release>
   <version>
    <release>1.2.0</release>
    <api>1.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-05-18</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
* add PharFileInfo::hasMetadata(), PharFileInfo::delMetadata() [Marcus]
* add Phar::hasMetadata(), Phar::delMetadata() [Marcus]
* fix Phar::CanWrite() [Marcus]
* add preliminary phar command (phar.php) [Marcus] 
* add phar command (phar.phar) [Marcus]
* list all available compression methods using Phar::getSupportedCompression() [Marcus]
* remove RINIT [Marcus]
   </notes>
  </release>
  <release>
   <version>
    <release>1.1.0</release>
    <api>1.1.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-04-12</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
* implement ability connect a phar file &apos;phar://whatever&apos; to a directory. That way all
  access to that phar archive are directed to the extracted directory. This
  allows to have the installed files and the archive keep the same includes.
  [Marcus]
* implement SHA-2 (256, 512) support [Marcus]
* implement setSignatureAlgorithm() and Phar::MD5 Phar::SHA1 Phar::SHA256 Phar::SHA512 Phar::PGP to
  choose the kind of signature to use (PGP falls back to SHA1) [Greg]
   </notes>
  </release>
  <release>
   <version>
    <release>1.0.1</release>
    <api>1.0.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-03-28</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
* Fix return value of unlink() and rename() when used for phar archievs. [Marcus]
   </notes>
  </release>
  <release>
   <version>
    <release>1.0.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-03-26</date>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
*BACKWARDS COMPATIBILITY BREAK*
Rename Phar-&gt;begin/isFlushingToPhar/commit to startBuffering/isBuffering/stopBuffering
Note that isBuffering() returns the opposite value to isFlushingToPhar()
   </notes>
  </release>
 </changelog>
</package>
